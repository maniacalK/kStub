buildscript {
    apply from: 'dependencies.gradle'
}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'application'
    id 'distribution'
}

repositories {
    mavenCentral()
    maven {
        url "https://kotlin.bintray.com/kotlin-js-wrappers/"
    }
    jcenter()

}

apply plugin: 'idea'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')


    implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
    implementation "io.ktor:ktor-html-builder:$ktor_version"


//    implementation("org.jetbrains:kotlin-react:16.13.0-pre.94-kotlin-1.3.70")
//    implementation("org.jetbrains:kotlin-react-dom:16.13.0-pre.94-kotlin-1.3.70")
//    implementation(npm("react", "16.13.1"))
//    implementation(npm("react-dom", "16.13.1"))

    implementation 'org.slf4j:slf4j-simple:1.7.21'


    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-tomcat:$ktor_version"
    implementation "io.ktor:ktor-locations:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-network-tls-certificates:$ktor_version"
//    implementation "io.ktor:ktor-client-logging-native:$ktor_version"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

application {
    mainClassName = 'com.maniacalK.kStub.AppKt'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.maniacalK.kStub.App'
        )
    }
}

task createDist(type: Sync) {
    group 'distribution'
    from "$buildDir/install/kStub"
    into "$projectDir/dist/kStub/"
}

task generateJks(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.maniacalK.kStub.cert.CertificateGenerator'
}

getTasksByName("run", false).first().dependsOn('generateJks')

createDist.dependsOn(installDist)